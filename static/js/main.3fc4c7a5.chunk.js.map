{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","employees","setEmployees","searchTerm","setSearchTerm","sortAsc","setSortAsc","useEffect","fetch","then","res","json","data","console","log","results","className","value","onChange","event","target","type","onClick","filter","employee","email","includes","sort","employeeA","employeeB","dob","age","map","index","name","first","last","href","src","picture","thumbnail","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yKAyDeA,MAvDf,WACE,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAYA,OATAC,qBAAU,WACRC,MAAM,yCACLC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,EAAKG,SACjBb,EAAaU,EAAKG,cAGpB,IAEA,sBAAKC,UAAU,MAAf,UACE,uBAAOC,MAAOd,EAAYe,SAAU,SAACC,GAASf,EAAce,EAAMC,OAAOH,QAAQI,KAAK,SACtF,kCACE,gCACE,+BACE,sCACA,uCACA,oBAAIC,QAAS,SAACH,GAASb,GAAYD,IAAnC,iBACA,8CAGJ,gCACGJ,EACAsB,QAAO,SAACC,GACP,OAAOA,EAASC,MAAMC,SAASvB,MAGhCwB,MAAK,SAACC,EAAWC,GAEhB,OAAQD,EAAUE,IAAIC,IAAMF,EAAUC,IAAIC,MAAQ1B,EAAQ,GAAG,MAI9D2B,KAAI,SAACR,EAAUS,GACd,OAAO,+BACL,+BAAKT,EAASU,KAAKC,MAAnB,IAA2BX,EAASU,KAAKE,QACzC,6BAAI,mBAAGC,KAAM,UAAYb,EAASC,MAA9B,SAAsCD,EAASC,UACnD,6BAAKD,EAASM,IAAIC,MAClB,6BAAI,qBAAKO,IAAMd,EAASe,QAAQC,6BClC/BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlC,MAAK,YAAkD,IAA/CmC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.3fc4c7a5.chunk.js","sourcesContent":["import {useEffect, useState} from \"react\";\n\nfunction App() {\n  const [employees, setEmployees] = useState([])\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [sortAsc, setSortAsc] = useState(true)\n  \n  \n  useEffect(()=>{\n    fetch(\"https://randomuser.me/api/?results=75\")\n    .then(res=>res.json())\n    .then(data =>{\n      console.log(data.results)\n      setEmployees(data.results)\n\n    })\n  },[]) \n  return (\n    <div className=\"App\">\n      <input value={searchTerm} onChange={(event)=>{setSearchTerm(event.target.value)}}type=\"text\"/>\n      <table>\n        <thead>\n          <tr>\n            <th>name</th>\n            <th>email</th>\n            <th onClick={(event)=>{setSortAsc(!sortAsc)}}>age</th>\n            <th>picture</th>\n          </tr>\n        </thead>\n        <tbody>\n          {employees\n          .filter((employee)=>{\n            return employee.email.includes(searchTerm)\n\n          })\n          .sort((employeeA, employeeB)=>{\n            //added a ternary statement to sort employee age\n            return (employeeA.dob.age - employeeB.dob.age) * (sortAsc?1:-1)\n\n            \n          })\n          .map((employee, index)=>{\n            return <tr>\n              <td>{employee.name.first} {employee.name.last}</td>\n              <td><a href={\"mailto:\" + employee.email}>{employee.email}</a></td>\n              <td>{employee.dob.age}</td>\n              <td><img src= {employee.picture.thumbnail}/></td>\n            </tr>\n\n          })}\n        </tbody>\n\n      </table>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}